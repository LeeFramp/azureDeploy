{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Prefix to use for resource names"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "Image SKU"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "dataDisks": {
      "type": "array",
      "defaultValue": [
        {
          "1": {
            "name": "datadisk1",
            "lun": 0,
            "vhd": {
              "uri": "[concat('http://', uniqueString(resourceGroup().id),'.blob.core.windows.net/vhds/', 'datadisk1.vhd')]"
            },
            "createOption": "Empty",
            "caching": "ReadWrite",
            "diskSizeGB": 128
          }
        }
      ]
    },
    "dataDiskCount": {
      "type": "int",
      "metadata": {
        "description": "Number of Data Disks to take from array."
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Virtual Machines to create"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type for Virtual Machines"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of Resource Group containing Virtual Network"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "myVNET",
      "metadata": {
        "description": "vNet name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "SubnetDefault",
      "metadata": {
        "description": "The name of the Subnet where Virtual Machines will be created"
      }
    }
  },
  "variables": {
    "storageAccountName": "[uniqueString(resourceGroup().id)]",
    "vNetID" : "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vNetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "diskArray": [
      {
        "name": "[concat(parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'), parameters('dataDisks')[0].Name)]",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', variables('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'),'-datadisk1.vhd')]"
        },
        "createOption": "Empty",
        "caching": "ReadWrite",
        "diskSizeGB": 100
      },
      {
        "name": "[concat(parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'), parameters('dataDisks')[0].Name)]",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', variables('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'),'-datadisk2.vhd')]"
        },
        "createOption": "Empty",
        "caching": "ReadWrite",
        "diskSizeGB": 250
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags":{
        "displayName": "Storage Account"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('resourcePrefix')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags":{
        "displayName": "Availability Set"
      },
      "properties": {}
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [

        ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },    
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'))]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('instanceCount')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('resourcePrefix'), '-',padLeft(copyindex(1), 2, '0'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('resourcePrefix'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('resourcePrefix'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[take(variables('diskArray'),parameters('dataDiskCount'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('resourcePrefix'), '-', padleft(copyindex(1), 2, '0')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
             "enabled": "true",
             "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ]
}