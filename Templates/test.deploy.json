{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceTemplateUri" : {
      "type": "string",
      "minLength": 14,
      "metadata": {
        "description" : "The URI hosting nested templates, for linked deployments"
      }
    },
    "parameterFilesUri": {
        "type": "string",
        "metadata": {
            "description": "The URI hosting parameter files for nested templates"
        }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "resourcePrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Prefix to use for resource names"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "Image SKU"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Virtual Machines to create"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type for Virtual Machines"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of Resource Group containing Virtual Network"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "myVNET",
      "metadata": {
        "description": "vNet name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "SubnetDefault",
      "metadata": {
        "description": "The name of the Subnet where Virtual Machines will be created"
      }
    },
    "dataDiskCount": {
        "type": "int",
        "defaultValue": 0,
        "metadata": {"description": "Number of Data Disks to add to VM - taken from DataDiskArray variable"}
    },
    "dataDiskParamsFile": {
        "type": "string",
        "defaultValue": "nodata.disks.params.json"
    }
  },
  "variables": {
    "storageAccountName": "[concat(toLower(replace(uniqueString(resourceGroup().id),'-','')))]",
    "availabilitySetName": "[concat(parameters('resourcePrefix'),'-AS')]",
    "vNetID" : "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vNetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "nicName" : "[parameters('resourcePrefix')]",
    "vmName": "[parameters('resourcePrefix')]"
  },
  "resources": [
    {
        "type": "Microsoft.Resources/deployments",
        "name": "[concat(variables('storageAccountName'),'-StorageAccount')]",
        "apiVersion": "2015-01-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(parameters('resourceTemplateUri'), 'storageAccount.json')]",
                "contentVersion": "1.0.0.0"            
            },
            "parameters": {
                "storageAccountType": {"value":"[parameters('storageAccountType')]"},
                "storageAccountName": {"value":"[variables('storageAccountName')]"},
                "resourceGroupName": {"value":"[resourceGroup().name]"},
                "resourceGroupLocation": {"value":"[resourceGroup().location]"}          
            }
        }
    },
    {
        "type": "Microsoft.Resources/deployments",
        "name": "[concat(variables('availabilitySetName'),'-AvailabilitySet')]",
        "apiVersion": "2015-01-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(parameters('resourceTemplateUri'), 'availabilitySet.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "availabilitySetName": {"value": "[variables('availabilitySetName')]"},
                "resourceGroupName": {"value":"[resourceGroup().name]"},
                "resourceGroupLocation": {"value": "[resourceGroup().location]"}   
            }
        }
    },
    {
        "type": "Microsoft.Resources/deployments",
        "name": "[concat(parameters('resourcePrefix'),'-staticNetworkInterfaces')]",
        "apiVersion": "2015-01-01",
        "dependsOn": [],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(parameters('resourceTemplateUri'), 'nic-static.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
            "resourceTemplateUri" : {"value":"[parameters('resourceTemplateUri')]"},
            "subnetRef": {"value": "[variables('subnetRef')]"},
            "nicName": {"value": "[concat(variables('nicName'))]"},
            "instanceCount" : {"value": "[parameters('instanceCount')]"},
            "resourceGroupName": {"value":"[resourceGroup().name]"},
            "resourceGroupLocation": {"value": "[resourceGroup().location]"}
            }
        }
    },
    {
        "type": "Microsoft.Resources/deployments",
        "name": "[concat(parameters('resourcePrefix'),'-',padLeft(copyIndex(1),2,'0'),'-virtualMachine')]",
        "apiVersion": "2015-01-01",
        "copy": {
            "name": "vmCopy",
            "count": "[parameters('instanceCount')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Resources/deployments/',variables('storageAccountName'),'-StorageAccount')]", 
            "[concat('Microsoft.Resources/deployments/',variables('availabilitySetName'),'-AvailabilitySet')]", 
            "[concat('Microsoft.Resources/deployments/',parameters('resourcePrefix'), '-staticNetworkInterfaces')]"             
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(parameters('resourceTemplateUri'), 'vm-dynamicdatadisks.test.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parametersLink": {
                "uri": "[concat(parameters('parameterFilesUri'), parameters('dataDiskParamsFile'))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "resourceGroupName": {"value": "[resourceGroup().name]"},
                "resourceGroupLocation": {"value": "[resourceGroup().location]"},
                "adminUsername": {"value": "[parameters('adminUsername')]"},
                "adminPassword": {"value": "[parameters('adminPassword')]"},
                "imagePublisher": {"value":"[parameters('imagePublisher')]"},
                "imageOffer": {"value": "[parameters('imageOffer')]"},
                "imageSKU": {"value": "[parameters('imageSKU')]"},
                "vmSize": {"value": "[parameters('vmSize')]"},
                "storageAccountName": {"value": "[variables('storageAccountName')]"},
                "availabilitySetName":{"value": "[variables('availabilitySetName')]"},  
                "osName": {"value": "[concat(variables('vmName'), '-', padLeft(copyIndex(1), 2, '0'))]"},                              
                "vmName": {"value": "[concat(variables('vmName'), '-', padLeft(copyIndex(1), 2, '0'), '-VM')]"},
                "nicName":{"value": "[concat(variables('nicName'),'-', padLeft(copyIndex(1), 2, '0'), '-NIC')]"},
                "dataDiskCount": {"value": "[parameters('dataDiskCount')]"}
            }
        }
    }
  ]
}